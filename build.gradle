buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.16-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

bootJar{
    mainClass='com.express.freight.FreightApplication'
}

jar {
    enabled = false
}

group = 'com.express'
version = '0.1'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // junit5
    testImplementation("org.junit.platform:junit-platform-launcher:1.5.2")
    testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // embedded redis ( h2 와 같은 내장 redis )
    implementation("it.ozimov:embedded-redis:0.7.2")

    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    // local test sqlite 3
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'

    // postgresql
    implementation 'org.postgresql:postgresql'

    // swagger ui 3
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    compile group: 'io.swagger', name: 'swagger-annotations', version: '1.6.2'
    compile group: 'io.swagger', name: 'swagger-models', version: '1.6.2'

    // querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    //MapStruct
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'

    // mysql
    implementation 'com.mysql:mysql-connector-j'

    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
    )
}

// query dsl
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
